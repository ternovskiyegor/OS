Навчитися запускати новий процес на передньому плані та у фоновому режимі, Призупинити та відновити роботу процесу, 
перевести його з переднього плану в фоновий режим та назад; розібратися з роботою команд ps, top, jobs, kill, at, nice,
renice.

Написати свою програму, яка отримує з командного рядка команди (або одну команду, або одну команду з параметрами,
 або кілька команд, розділений точною з комою (;)) і передає їх для виконання функції system(). Вивести код завершення.

Напишіть програму, яка реєструє вказане при старті програми командному рядку кількість функцій - обробників завершення процесу. 
Обробник має затримувати роботу на 1 сек. та виводити повідомлення з номером.

Напишіть версію спрощеного командного процесора. На самому початку роботи виводиться повідомлення про те, хто працює з командним процесором 
(виводиться повне ім'я) користувача, який зараз працює з програмою). Потім на екран виводиться
запрошення виду [user]$, (тут user - реєстраційне ім'я поточного користувача). Програма готова прийому команд командної оболонки.
 Якщо команді не виконано, то на екран виводиться повідомлення, інакше результат виконаної команди. 
 Для Завершення роботи програми призначена команда stop. При передчасному завершення програми в результаті будь-якої помилки,
  а також при нормальному завершенні програми, на екран виводиться повідомлення Wait 3 seconds..., програма чекає
3 секунди, потім очищає екран та завершує свою роботу. Крім того, програма повиннапрацювати з двома опціями:
 -h і --help — опція без аргументу, призначена для виведення довідкової інформації роботи з програмою;
 -b та --buffer опція з аргументом — цілим числом, яке визначає розмір символьного буфера для зберігання команди, 
що вводиться користувачем; якщо користувач не вказав розмір при запуску програми, як значення по замовчуванням взяти 127.
 При написанні програми потрібно використовувати функцію system() та особливе звернути увагу на обробку помилок. 
 Продумати, які бібліотечні функції знадобляться для роботи. (Можна скористатися: gets() <stdio.h> для читання команди, 
 sleep() <unistd.h> для затримки на вказану кількість секунд та команду оболонки clear для очищення екрану)

Напишіть програму, яка залежить від значення опції -f (--file) встановлює (якщо при запуску програми вказано 
опцію чи ні — якщо не вказано) значення системної змінної FILE_NAME. Крім того, вона запускає задану кількість
(опція -n (--number)) «Дочірніх програм». Створіть «дочірню» програму, яка перевіряє значення цієї системної змінної.
 Якщо змінна задана, то базова частина Ім'я результуючого файлу береться з неї. Якщо змінна не задана, то як
базової частини імені результуючого файлу береться значення за промовчанням. Крім цього, Ім'я файлу має
 містити «номер» програми, отриманий з командного рядка. У файл збережіть задану кількість (номер програми)
  випадкових чисел в діапазоні [0,1].